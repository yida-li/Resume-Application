{"ast":null,"code":"import _defineProperty from\"/home/king/Desktop/lindabirthday/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/king/Desktop/lindabirthday/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/king/Desktop/lindabirthday/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import contactContext from'../../context/contact/contactContext';var SecondForm=function SecondForm(){var context=useContext(contactContext);var current=context.current;var _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;// We use the componentDidMount lifecycle method to  fill the form\n// fields when the edit button is clicked. In ContactItem.js we have\n// included functionality by which when the edit button is clicked, the\n// current state variable is set to the contact. In this file, we check\n// whether the current value is null or not on component mount, if not null\n// we set the state variables to current contact which when reflects in the form\n// as the name attribute of input is the state variables name, email, phone etc.\nuseEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[current]);var onChange=function onChange(e){var _e$target=e.target,value=_e$target.value,name=_e$target.name;setContact(_objectSpread({},contact,_defineProperty({},name,value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(!current){context.addContact(contact);}else{context.updateContact(contact);}setContact({name:'',email:'',phone:'',type:'personal'});};var clearAll=function clearAll(){context.clearCurrent();};return React.createElement(\"form\",{onSubmit:onSubmit},React.createElement(\"h2\",{className:\"text-primary\"},current===null?'Add Job':'Edit Job'),React.createElement(\"input\",{type:\"text\",name:\"name\",value:name,placeholder:\"Company\",onChange:onChange}),React.createElement(\"input\",{type:\"email\",name:\"email\",value:email,placeholder:\"Department\",onChange:onChange}),React.createElement(\"input\",{type:\"text\",name:\"phone\",value:phone,placeholder:\"Phone\",onChange:onChange}),React.createElement(\"h5\",null,\"Company type\"),React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"public\",checked:type==='public',onChange:onChange}),\"Public\",' ',React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"private\",checked:type==='private',onChange:onChange}),\"Private\",' ',React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"None profit Organization\",checked:type==='None profit Organization',onChange:onChange}),\"None profit Organization\",' ',React.createElement(\"div\",null,React.createElement(\"input\",{type:\"submit\",value:current===null?'Add Job':'Edit Job',className:\"btn btn-primary btn-block\"})),current&&React.createElement(\"div\",null,React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear\")));};export default SecondForm;","map":{"version":3,"sources":["/home/king/Desktop/lindabirthday/client/src/components/contacts/SecondForm.js"],"names":["React","useState","useContext","useEffect","contactContext","SecondForm","context","current","name","email","phone","type","contact","setContact","onChange","e","target","value","onSubmit","preventDefault","addContact","updateContact","clearAll","clearCurrent"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport contactContext from '../../context/contact/contactContext';\n\nconst SecondForm = () => {\n  const context = useContext(contactContext);\n  const { current } = context;\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n  const { name, email, phone, type } = contact;\n\n  // We use the componentDidMount lifecycle method to  fill the form\n  // fields when the edit button is clicked. In ContactItem.js we have\n  // included functionality by which when the edit button is clicked, the\n  // current state variable is set to the contact. In this file, we check\n  // whether the current value is null or not on component mount, if not null\n  // we set the state variables to current contact which when reflects in the form\n  // as the name attribute of input is the state variables name, email, phone etc.\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [current]);\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setContact({ ...contact, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!current) {\n      context.addContact(contact);\n    } else {\n      context.updateContact(contact);\n    }\n\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal',\n    });\n  };\n\n  const clearAll = () => {\n    context.clearCurrent();\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current === null ? 'Add Job' : 'Edit Job'}\n      </h2>\n      <input\n        type='text'\n        name='name'\n        value={name}\n        placeholder='Company'\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        name='email'\n        value={email}\n        placeholder='Department'\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        name='phone'\n        value={phone}\n        placeholder='Phone'\n        onChange={onChange}\n      />\n      <h5>Company type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='public'\n        checked={type === 'public'}\n        onChange={onChange}\n      />\n      Public{' '}\n      <input\n        type='radio'\n        name='type'\n        value='private'\n        checked={type === 'private'}\n        onChange={onChange}\n      />\n      Private{' '}\n      <input\n        type='radio'\n        name='type'\n        value='None profit Organization'\n        checked={type === 'None profit Organization'}\n        onChange={onChange}\n      />\n      None profit Organization{' '}\n      <div>\n        <input\n          type='submit'\n          value={current === null ? 'Add Job' : 'Edit Job'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default SecondForm;\n"]},"metadata":{},"sourceType":"module"}