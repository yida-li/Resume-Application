{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/testingGround/client/src/components/routing/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const authContext = useContext(AuthContext);\n  const {\n    isAuthenticated,\n    loading\n  } = authContext;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && loading ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/king/Desktop/testingGround/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","rest","authContext","isAuthenticated","loading","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACxD,QAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;AACA,QAAM;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BF,WAArC;AACA,SACI,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,MAAM,EAAII,KAAK,IAAI,CAACF,eAAD,IAAoBC,OAApB,GAChC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgC,GAGjC,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAOH,CAVD;;AAYA,eAAeP,YAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthContext from '../../context/auth/authContext'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const authContext = useContext(AuthContext)\n    const { isAuthenticated, loading } = authContext\n    return (\n        <Route {...rest} render = {props => !isAuthenticated && loading ? (\n            <Redirect to = '/login' />\n        ) : (\n           <Component {...props} /> \n        )} />\n    )\n}\n\nexport default PrivateRoute\n"]},"metadata":{},"sourceType":"module"}