{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/lindabirthday/client/src/components/layout/Navbar.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst Navbar = ({\n  title,\n  icon\n}) => {\n  const authContext = useContext(AuthContext);\n  const contactContext = useContext(ContactContext);\n  const {\n    isAuthenticated,\n    logout,\n    user,\n    loadUser\n  } = authContext;\n  const {\n    clearContacts\n  } = contactContext;\n  useEffect(() => {\n    loadUser(); //eslint-disable-next-line\n  }, []);\n\n  const onLogout = () => {\n    logout(); // When we logout and then try to login we see the previous user\n    //contacts for a sec. To avoid this we clear the contacts after\n    // logging out\n\n    clearContacts();\n  };\n\n  const authLinks = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Hello \", user && user.name), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: onLogout,\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-sign-out-alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Logout\"))));\n  const guestLinks = React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Register\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://www.w3schools.com/html/html_links.asp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Job Search\")));\n  return React.createElement(\"div\", {\n    className: \"navbar bg-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \" \", title), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, isAuthenticated ? authLinks : guestLinks));\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string\n};\nNavbar.defaultProps = {\n  title: 'Resume.com',\n  icon: 'fas fa-id-card-alt'\n};\nexport default Navbar;","map":{"version":3,"sources":["/home/king/Desktop/lindabirthday/client/src/components/layout/Navbar.js"],"names":["React","Fragment","useContext","useEffect","PropTypes","Link","AuthContext","ContactContext","Navbar","title","icon","authContext","contactContext","isAuthenticated","logout","user","loadUser","clearContacts","onLogout","authLinks","name","guestLinks","propTypes","string","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AAClC,QAAMC,WAAW,GAAGT,UAAU,CAACI,WAAD,CAA9B;AACA,QAAMM,cAAc,GAAGV,UAAU,CAACK,cAAD,CAAjC;AACA,QAAM;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,MAA8CL,WAApD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAoBL,cAA1B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,GADM,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,MAAM,GADe,CAErB;AACA;AACA;;AACAG,IAAAA,aAAa;AACd,GAND;;AAQA,QAAME,SAAS,GACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWJ,IAAI,IAAIA,IAAI,CAACK,IAAxB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,OAAO,EAAEF,QAAZ;AAAsB,IAAA,IAAI,EAAC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CAFF,CADF;AAYA,QAAMG,UAAU,GACd,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,+CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAPF,CADF;AAcA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEX,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OAC0BD,KAD1B,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,eAAe,GAAGM,SAAH,GAAeE,UAAnC,CAJF,CADF;AAQD,CApDD;;AAsDAb,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,KAAK,EAAEL,SAAS,CAACmB,MAAV,CAAiBC,UADP;AAEjBd,EAAAA,IAAI,EAAEN,SAAS,CAACmB;AAFC,CAAnB;AAKAf,MAAM,CAACiB,YAAP,GAAsB;AACpBhB,EAAAA,KAAK,EAAE,YADa;AAEpBC,EAAAA,IAAI,EAAE;AAFc,CAAtB;AAKA,eAAeF,MAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst Navbar = ({ title, icon }) => {\n  const authContext = useContext(AuthContext);\n  const contactContext = useContext(ContactContext);\n  const { isAuthenticated, logout, user, loadUser } = authContext;\n  const { clearContacts } = contactContext;\n\n  useEffect(() => {\n    loadUser();\n    //eslint-disable-next-line\n  }, []);\n  const onLogout = () => {\n    logout();\n    // When we logout and then try to login we see the previous user\n    //contacts for a sec. To avoid this we clear the contacts after\n    // logging out\n    clearContacts();\n  };\n\n  const authLinks = (\n    <Fragment>\n      <li>Hello {user && user.name}</li>\n      <li>\n        <a onClick={onLogout} href='#!'>\n          <i className='fas fa-sign-out-alt'></i>\n          <span className='hide-sm'>Logout</span>\n        </a>\n      </li>\n    </Fragment>\n  );\n\n  const guestLinks = (\n    <Fragment>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n      <li>\n        <a href='https://www.w3schools.com/html/html_links.asp'>Job Search</a>\n      </li>\n    </Fragment>\n  );\n\n  return (\n    <div className='navbar bg-primary'>\n      <h1>\n        <i className={icon} /> {title}\n      </h1>\n      <ul>{isAuthenticated ? authLinks : guestLinks}</ul>\n    </div>\n  );\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: 'Resume.com',\n  icon: 'fas fa-id-card-alt',\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}