{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import contactContext from'../../context/contact/contactContext';import ContactItem from'./ContactItem';import Spinner from'../layout/Spinner';var Contacts=function Contacts(){var context=useContext(contactContext);var contacts=context.contacts,filtered=context.filtered,getContacts=context.getContacts,loading=context.loading;useEffect(function(){getContacts();// eslint-disable-next-line\n},[context]);if(contacts!==null&&contacts.length===0&&!loading){return React.createElement(\"h4\",null,\"Please add a contact\");}return React.createElement(Fragment,null,contacts!==null&&!loading?React.createElement(TransitionGroup,null,filtered===null?contacts.map(function(contact){// _id is the MongoDB id\nreturn React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},React.createElement(ContactItem,{contact:contact}));}):filtered.map(function(contact){return React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},React.createElement(ContactItem,{contact:contact}));})):React.createElement(Spinner,null));};export default Contacts;","map":{"version":3,"sources":["/home/king/Desktop/lindabirthday/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","contactContext","ContactItem","Spinner","Contacts","context","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAQC,CAAAA,cAAR,KAA4B,sCAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAMC,CAAAA,OAAO,CAAGR,UAAU,CAACI,cAAD,CAA1B,CADmB,GAEXK,CAAAA,QAFW,CAEkCD,OAFlC,CAEXC,QAFW,CAEDC,QAFC,CAEkCF,OAFlC,CAEDE,QAFC,CAESC,WAFT,CAEkCH,OAFlC,CAESG,WAFT,CAEsBC,OAFtB,CAEkCJ,OAFlC,CAEsBI,OAFtB,CAInBX,SAAS,CAAC,UAAM,CACZU,WAAW,GACX;AACH,CAHQ,CAGN,CAACH,OAAD,CAHM,CAAT,CAKA,GAAIC,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAnD,CAA4D,CACxD,MAAO,sDAAP,CACH,CAGD,MACI,qBAAC,QAAD,MACKH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,CACG,oBAAC,eAAD,MAEIF,QAAQ,GAAK,IAAb,CACID,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,CAAI,CACpB;AACA,MAAO,qBAAC,aAAD,EAAe,GAAG,CAAIA,OAAO,CAACC,GAA9B,CAAmC,OAAO,CAAG,GAA7C,CAAkD,UAAU,CAAE,MAA9D,EACK,oBAAC,WAAD,EAAc,OAAO,CAAID,OAAzB,EADL,CAAP,CAGC,CALL,CADJ,CAQIL,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,CAAI,CACpB,MAAO,qBAAC,aAAD,EAAe,GAAG,CAAIA,OAAO,CAACC,GAA9B,CAAmC,OAAO,CAAG,GAA7C,CAAkD,UAAU,CAAE,MAA9D,EACK,oBAAC,WAAD,EAAa,OAAO,CAAID,OAAxB,EADL,CAAP,CAGC,CAJL,CAVR,CADH,CAoBG,oBAAC,OAAD,MArBR,CADJ,CA0BH,CAxCD,CA0CA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport  contactContext from '../../context/contact/contactContext'\nimport ContactItem from './ContactItem'\nimport Spinner from '../layout/Spinner'\n\nconst Contacts = () => {\n    const context = useContext(contactContext)\n    const { contacts, filtered, getContacts, loading } = context\n\n    useEffect(() => {\n        getContacts()\n        // eslint-disable-next-line\n    }, [context])\n\n    if (contacts !== null && contacts.length === 0 && !loading) {\n        return <h4>Please add a contact</h4>\n    }\n\n\n    return (\n        <Fragment>\n            {contacts !== null && !loading ? (\n                <TransitionGroup>\n                {\n                    filtered === null ? (\n                        contacts.map(contact => {\n                            // _id is the MongoDB id\n                            return <CSSTransition key = {contact._id} timeout= {500} classNames= \"item\">\n                                        <ContactItem  contact = {contact}/> \n                                    </CSSTransition>\n                            })\n                    ) : (\n                        filtered.map(contact => {\n                            return <CSSTransition key = {contact._id} timeout= {500} classNames= \"item\">\n                                        <ContactItem contact = {contact}/>\n                                    </CSSTransition>\n                            })\n                    )\n\n                }\n                </TransitionGroup>\n            ) : <Spinner />}\n        </Fragment>\n    )   \n\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}