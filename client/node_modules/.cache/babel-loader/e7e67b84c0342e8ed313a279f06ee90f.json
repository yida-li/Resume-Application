{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/testingGround/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport contactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport Spinner from '../layout/Spinner';\n\nconst Contacts = () => {\n  const context = useContext(contactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = context;\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line\n  }, [context]);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, contacts !== null && !loading ? React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, filtered === null ? contacts.map(contact => {\n    // _id is the MongoDB id\n    return React.createElement(CSSTransition, {\n      key: contact._id,\n      timeout: 500,\n      classNames: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(ContactItem, {\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }) : filtered.map(contact => {\n    return React.createElement(CSSTransition, {\n      key: contact._id,\n      timeout: 500,\n      classNames: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ContactItem, {\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  })) : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/home/king/Desktop/testingGround/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","contactContext","ContactItem","Spinner","Contacts","context","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAQC,cAAR,MAA4B,sCAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGR,UAAU,CAACI,cAAD,CAA1B;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA;AAAnC,MAA+CJ,OAArD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,GADC,CAEZ;AACH,GAHQ,EAGN,CAACH,OAAD,CAHM,CAAT;;AAKA,MAAIC,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACI,MAAT,KAAoB,CAAzC,IAA8C,CAACD,OAAnD,EAA4D;AACxD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AAGD,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,GACG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,QAAQ,KAAK,IAAb,GACID,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAAI;AACpB;AACA,WAAO,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAIA,OAAO,CAACC,GAA9B;AAAmC,MAAA,OAAO,EAAG,GAA7C;AAAkD,MAAA,UAAU,EAAE,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,WAAD;AAAc,MAAA,OAAO,EAAID,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CAAP;AAGC,GALL,CADJ,GAQIL,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAAI;AACpB,WAAO,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAIA,OAAO,CAACC,GAA9B;AAAmC,MAAA,OAAO,EAAG,GAA7C;AAAkD,MAAA,UAAU,EAAE,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAID,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CAAP;AAGC,GAJL,CAVR,CADH,GAoBG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBR,CADJ;AA0BH,CAxCD;;AA0CA,eAAeR,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport  contactContext from '../../context/contact/contactContext'\nimport ContactItem from './ContactItem'\nimport Spinner from '../layout/Spinner'\n\nconst Contacts = () => {\n    const context = useContext(contactContext)\n    const { contacts, filtered, getContacts, loading } = context\n\n    useEffect(() => {\n        getContacts()\n        // eslint-disable-next-line\n    }, [context])\n\n    if (contacts !== null && contacts.length === 0 && !loading) {\n        return <h4>Please add a contact</h4>\n    }\n\n\n    return (\n        <Fragment>\n            {contacts !== null && !loading ? (\n                <TransitionGroup>\n                {\n                    filtered === null ? (\n                        contacts.map(contact => {\n                            // _id is the MongoDB id\n                            return <CSSTransition key = {contact._id} timeout= {500} classNames= \"item\">\n                                        <ContactItem  contact = {contact}/> \n                                    </CSSTransition>\n                            })\n                    ) : (\n                        filtered.map(contact => {\n                            return <CSSTransition key = {contact._id} timeout= {500} classNames= \"item\">\n                                        <ContactItem contact = {contact}/>\n                                    </CSSTransition>\n                            })\n                    )\n\n                }\n                </TransitionGroup>\n            ) : <Spinner />}\n        </Fragment>\n    )   \n\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}