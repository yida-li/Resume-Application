{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/ContactKeeperV2/client/src/components/Auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = authContext;\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = user;\n  useEffect(() => {\n    // If we are logged in successfully, redirect to the home page\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid credentials') {\n      setAlert(authContext.error, 'danger');\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error, props.history, isAuthenticated]);\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login({\n      email,\n      password\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Account \", React.createElement(\"span\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/king/Desktop/ContactKeeperV2/client/src/components/Auth/Login.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","user","setUser","email","password","history","push","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport AlertContext from '../../context/alert/alertContext'\nimport AuthContext from '../../context/auth/authContext'\n\nconst Login = (props) => {\n    const alertContext = useContext(AlertContext)\n    const authContext = useContext(AuthContext)\n\n    const { setAlert } = alertContext\n    const { login, error, clearErrors, isAuthenticated } = authContext;\n\n    const [user, setUser] = useState({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = user\n\n    useEffect(() => {\n        // If we are logged in successfully, redirect to the home page\n        if (isAuthenticated) {\n            props.history.push('/')\n        }\n        if (error === 'Invalid credentials') {\n            setAlert(authContext.error, 'danger')\n            clearErrors()\n        }\n        //eslint-disable-next-line\n    },  [error, props.history, isAuthenticated])\n\n    const onChange = e => setUser({...user, [e.target.name] : e.target.value})\n\n    const onSubmit = e => {\n        e.preventDefault()\n        login({\n            email,\n            password\n        })\n    }\n    return (\n        <div className= \"form-container\">\n            <h1>\n                Account <span className= \"text-primary\">Login</span>\n            </h1>\n            <form onSubmit = {onSubmit}>\n                <div className= \"form-group\">\n                <label htmlFor= \"email\">Email</label>\n                    <input type= \"email\" name=\"email\" value= {email} onChange = {onChange} required/>\n                </div>\n                <div className= \"form-group\">\n                <label htmlFor= \"password\">Password</label>\n                    <input type= \"password\" name=\"password\" value= {password} onChange = {onChange} required/>\n                </div>\n                <input type= \"submit\" value= \"Login\" className= \"btn btn-primary btn-block\" />\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}