{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/lindabirthday/client/src/components/contacts/Form.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport contactContext from '../../context/contact/contactContext';\n\nconst Form = () => {\n  const context = useContext(contactContext);\n  const {\n    current\n  } = context;\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact; // We use the componentDidMount lifecycle method to  fill the form \n  // fields when the edit button is clicked. In ContactItem.js we have \n  // included functionality by which when the edit button is clicked, the\n  // current state variable is set to the contact. In this file, we check\n  // whether the current value is null or not on component mount, if not null\n  // we set the state variables to current contact which when reflects in the form\n  // as the name attribute of input is the state variables name, email, phone etc.\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [current]);\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setContact({ ...contact,\n      [name]: value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!current) {\n      context.addContact(contact);\n    } else {\n      context.updateContact(contact);\n    }\n\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n\n  const clearAll = () => {\n    context.clearCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, current === null ? 'Add Contact' : 'Edit Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    placeholder: \"Name\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: \"Email\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    value: phone,\n    placeholder: \"Phone\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Contact type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === \"personal\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), \"Personal\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === \"professional\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), \"Professional\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"recreactional\",\n    checked: type === \"recreactional\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), \"Recreational\", ' ', React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current === null ? 'Add Contact' : 'Edit Contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/king/Desktop/lindabirthday/client/src/components/contacts/Form.js"],"names":["React","useState","useContext","useEffect","contactContext","Form","context","current","contact","setContact","name","email","phone","type","onChange","e","value","target","onSubmit","preventDefault","addContact","updateContact","clearAll","clearCurrent"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport contactContext from '../../context/contact/contactContext'\n\nconst Form = () => {\n    const context = useContext(contactContext)\n    const { current } = context\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n    })\n    const {name, email, phone, type } = contact\n\n    // We use the componentDidMount lifecycle method to  fill the form \n    // fields when the edit button is clicked. In ContactItem.js we have \n    // included functionality by which when the edit button is clicked, the\n    // current state variable is set to the contact. In this file, we check\n    // whether the current value is null or not on component mount, if not null\n    // we set the state variables to current contact which when reflects in the form\n    // as the name attribute of input is the state variables name, email, phone etc.\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current)\n        } else {\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                type: 'personal'            \n            })           \n        }\n    }, [current])\n    \n    const onChange = (e) => {\n        const { value, name } = e.target\n        setContact({...contact, [name] : value})\n\n    }   \n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (!current) {\n            context.addContact(contact)\n        } else {\n            context.updateContact(contact)\n        }\n        \n        setContact({\n            name: '',\n            email: '',\n            phone: '',\n            type: 'personal'            \n        })\n    }\n\n    const clearAll = () => {\n        context.clearCurrent()\n    }\n    return (\n        <form onSubmit = {onSubmit}>\n            <h2 className = \"text-primary\">{current === null ? 'Add Contact' : 'Edit Contact'}</h2>\n            <input type = \"text\" name= \"name\" value= {name} placeholder= \"Name\" onChange= {onChange} />\n            <input type = \"email\" name= \"email\" value= {email} placeholder= \"Email\" onChange= {onChange}/>\n            <input type = \"text\" name= \"phone\" value= {phone} placeholder= \"Phone\" onChange= {onChange}/>\n            <h5>Contact type</h5>\n            <input type = \"radio\" name= \"type\" value= \"personal\" checked = { type === \"personal\" } onChange= {onChange} />Personal{' '}\n            <input type = \"radio\" name= \"type\" value= \"professional\" checked = { type === \"professional\" } onChange= {onChange} />Professional{' '}\n<input type = \"radio\" name= \"type\" value= \"recreactional\" checked = { type === \"recreactional\" } onChange= {onChange} />Recreational{' '}\n            <div>\n\n                <input type= \"submit\" value= {current === null ? 'Add Contact' : 'Edit Contact'} className= \"btn btn-primary btn-block\"/>\n            </div>\n            {\n                current && (\n                    <div>\n                        <button className= \"btn btn-light btn-block\" onClick= {clearAll}>Clear</button>\n                    </div>\n                )\n            }\n        </form>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}