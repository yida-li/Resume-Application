{"ast":null,"code":"import _toConsumableArray from\"/home/king/Desktop/lindabirthday/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/king/Desktop/lindabirthday/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_CONTACTS,ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR,CLEAR_CONTACTS}from'../Types';var contactReducer=function contactReducer(state,action){switch(action.type){case ADD_CONTACT:return _objectSpread({},state,{contacts:[].concat(_toConsumableArray(state.contacts),[action.payload]),loading:false});case GET_CONTACTS:return _objectSpread({},state,{contacts:action.payload,loading:false});case DELETE_CONTACT:{return _objectSpread({},state,{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload.id;}),loading:false});}case SET_CURRENT:{return _objectSpread({},state,{current:action.payload});}case CLEAR_CURRENT:{return _objectSpread({},state,{current:null});}case UPDATE_CONTACT:{return _objectSpread({},state,{contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false});}case FILTER_CONTACTS:{return _objectSpread({},state,{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),'gi');return contact.name.match(regex)||contact.email.match(regex);})});}case CLEAR_CONTACTS:{return _objectSpread({},state,{contacts:null,filtered:null,error:null,current:null});}case CLEAR_FILTER:{return _objectSpread({},state,{filtered:null});}case CONTACT_ERROR:{return _objectSpread({},state,{error:action.payload});}default:return state;}};export default contactReducer;","map":{"version":3,"sources":["/home/king/Desktop/lindabirthday/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","contactReducer","state","action","type","contacts","payload","loading","filter","contact","_id","id","current","map","filtered","regex","RegExp","name","match","email","error"],"mappings":"2PAAA,OACIA,YADJ,CAEIC,WAFJ,CAGIC,cAHJ,CAIIC,WAJJ,CAKIC,aALJ,CAMIC,cANJ,CAOIC,eAPJ,CAQIC,YARJ,CASIC,aATJ,CAUIC,cAVJ,KAWO,UAXP,CAaA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACtC,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKZ,CAAAA,WAAL,CACI,wBACOU,KADP,EAEIG,QAAQ,8BAAMH,KAAK,CAACG,QAAZ,GAAsBF,MAAM,CAACG,OAA7B,EAFZ,CAGIC,OAAO,CAAE,KAHb,GAKJ,IAAKhB,CAAAA,YAAL,CACI,wBACOW,KADP,EAEIG,QAAQ,CAAEF,MAAM,CAACG,OAFrB,CAGIC,OAAO,CAAE,KAHb,GAKJ,IAAKd,CAAAA,cAAL,CAAqB,CACjB,wBACOS,KADP,EAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeK,EAAnC,EAA7B,CAFd,CAGIJ,OAAO,CAAE,KAHb,GAKH,CACD,IAAKb,CAAAA,WAAL,CAAkB,CACd,wBACOQ,KADP,EAEIU,OAAO,CAAET,MAAM,CAACG,OAFpB,GAIH,CACD,IAAKX,CAAAA,aAAL,CAAoB,CAChB,wBACOO,KADP,EAEIU,OAAO,CAAE,IAFb,GAIH,CACD,IAAKhB,CAAAA,cAAL,CAAqB,CACjB,wBACOM,KADP,EAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeQ,GAAf,CAAmB,SAAAJ,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OAA1D,EAA1B,CAFd,CAGIF,OAAO,CAAE,KAHb,GAKH,CACD,IAAKV,CAAAA,eAAL,CAAsB,CAClB,wBACOK,KADP,EAEIY,QAAQ,CAAEZ,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsB,SAAAC,OAAO,CAAI,CACvC,GAAMM,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACH,CAHS,CAFd,GAOH,CACD,IAAKf,CAAAA,cAAL,CAAqB,CACjB,wBACOE,KADP,EAEIG,QAAQ,CAAE,IAFd,CAGIS,QAAQ,CAAE,IAHd,CAIIM,KAAK,CAAE,IAJX,CAKIR,OAAO,CAAE,IALb,GAOH,CACD,IAAKd,CAAAA,YAAL,CAAmB,CACf,wBACOI,KADP,EAEIY,QAAQ,CAAE,IAFd,GAIH,CACD,IAAKf,CAAAA,aAAL,CAAoB,CAChB,wBACOG,KADP,EAEIkB,KAAK,CAAEjB,MAAM,CAACG,OAFlB,GAIH,CACD,QACI,MAAOJ,CAAAA,KAAP,CAtER,CAwEH,CAzED,CA2EA,cAAeD,CAAAA,cAAf","sourcesContent":["import {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR,\n    CLEAR_CONTACTS\n} from '../Types'\n\nconst contactReducer = (state, action) => {\n    switch(action.type) {\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload],\n                loading: false\n            }\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case DELETE_CONTACT: {\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact._id !== action.payload.id),\n                loading: false\n            }\n        }\n        case SET_CURRENT: {\n            return {\n                ...state,\n                current: action.payload\n            }\n        }\n        case CLEAR_CURRENT: {\n            return {\n                ...state,\n                current: null\n            }\n        }\n        case UPDATE_CONTACT: {\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\n                loading: false\n            }\n        }\n        case FILTER_CONTACTS: {\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`, 'gi')\n                    return contact.name.match(regex) || contact.email.match(regex)\n                })\n            }\n        }\n        case CLEAR_CONTACTS: {\n            return {\n                ...state,\n                contacts: null,\n                filtered: null,\n                error: null,\n                current: null\n            }\n        }\n        case CLEAR_FILTER: {\n            return {\n                ...state,\n                filtered: null\n            }\n        }\n        case CONTACT_ERROR: {\n            return {\n                ...state,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default contactReducer"]},"metadata":{},"sourceType":"module"}