{"ast":null,"code":"import React,{useContext,useRef,useEffect}from'react';import contactContext from'../../context/contact/contactContext';var ContactFilter=function ContactFilter(){var context=useContext(contactContext);var text=useRef('');useEffect(function(){if(context.filtered===null){text.current.value='';}});var onChange=function onChange(e){if(text.current.value!==''){context.filterContacts(e.target.value);}else{context.clearFilter();}};return React.createElement(\"form\",null,React.createElement(\"input\",{type:\"text\",placeholder:\"Search\",ref:text,onChange:onChange}));};export default ContactFilter;","map":{"version":3,"sources":["/home/king/Desktop/lindabirthday/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","contactContext","ContactFilter","context","text","filtered","current","value","onChange","e","filterContacts","target","clearFilter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAMC,CAAAA,OAAO,CAAGL,UAAU,CAACG,cAAD,CAA1B,CACA,GAAMG,CAAAA,IAAI,CAAGL,MAAM,CAAC,EAAD,CAAnB,CAEAC,SAAS,CAAC,UAAM,CACZ,GAAIG,OAAO,CAACE,QAAR,GAAqB,IAAzB,CAA+B,CAC3BD,IAAI,CAACE,OAAL,CAAaC,KAAb,CAAoB,EAApB,CACH,CACJ,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CAClB,GAAIL,IAAI,CAACE,OAAL,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC3BJ,OAAO,CAACO,cAAR,CAAuBD,CAAC,CAACE,MAAF,CAASJ,KAAhC,EACH,CAFD,IAEO,CACHJ,OAAO,CAACS,WAAR,GACH,CAEJ,CAPD,CAQA,MACI,iCACG,6BAAO,IAAI,CAAE,MAAb,CAAoB,WAAW,CAAE,QAAjC,CAA0C,GAAG,CAAGR,IAAhD,CAAsD,QAAQ,CAAGI,QAAjE,EADH,CADJ,CAKH,CAvBD,CAyBA,cAAeN,CAAAA,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react'\nimport contactContext from '../../context/contact/contactContext'\n\nconst ContactFilter = () => {\n    const context = useContext(contactContext)\n    const text = useRef('')\n\n    useEffect(() => {\n        if (context.filtered === null) {\n            text.current.value= ''\n        }\n    })\n\n    const onChange = e => {\n        if (text.current.value !== '') {\n            context.filterContacts(e.target.value)\n        } else {\n            context.clearFilter()\n        }\n        \n    }\n    return (\n        <form>\n           <input type= \"text\" placeholder= \"Search\" ref= {text} onChange= {onChange}/> \n        </form>\n    )\n}\n\nexport default ContactFilter\n"]},"metadata":{},"sourceType":"module"}