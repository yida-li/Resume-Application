{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/lindabirthday/client/src/components/contacts/SecondForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport contactContext from '../../context/contact/contactContext';\n\nconst SecondForm = () => {\n  const context = useContext(contactContext);\n  const {\n    current\n  } = context;\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact; // We use the componentDidMount lifecycle method to  fill the form\n  // fields when the edit button is clicked. In ContactItem.js we have\n  // included functionality by which when the edit button is clicked, the\n  // current state variable is set to the contact. In this file, we check\n  // whether the current value is null or not on component mount, if not null\n  // we set the state variables to current contact which when reflects in the form\n  // as the name attribute of input is the state variables name, email, phone etc.\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [current]);\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setContact({ ...contact,\n      [name]: value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!current) {\n      context.addContact(contact);\n    } else {\n      context.updateContact(contact);\n    }\n\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n\n  const clearAll = () => {\n    context.clearCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, current === null ? 'Add Job' : 'Edit Job'), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Organization\",\n    value: name,\n    placeholder: \"Name\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"Department\",\n    value: email,\n    placeholder: \"Email\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    value: phone,\n    placeholder: \"Phone\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Contact type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"public\",\n    checked: type === 'public',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), \"Personal\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"prprivate\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), \"Professional\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"recreactional\",\n    checked: type === 'recreactional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), \"Recreational\", ' ', React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current === null ? 'Add Job' : 'Edit Job',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default SecondForm;","map":{"version":3,"sources":["/home/king/Desktop/lindabirthday/client/src/components/contacts/SecondForm.js"],"names":["React","useState","useContext","useEffect","contactContext","SecondForm","context","current","contact","setContact","name","email","phone","type","onChange","e","value","target","onSubmit","preventDefault","addContact","updateContact","clearAll","clearCurrent"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport contactContext from '../../context/contact/contactContext';\n\nconst SecondForm = () => {\n  const context = useContext(contactContext);\n  const { current } = context;\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n  const { name, email, phone, type } = contact;\n\n  // We use the componentDidMount lifecycle method to  fill the form\n  // fields when the edit button is clicked. In ContactItem.js we have\n  // included functionality by which when the edit button is clicked, the\n  // current state variable is set to the contact. In this file, we check\n  // whether the current value is null or not on component mount, if not null\n  // we set the state variables to current contact which when reflects in the form\n  // as the name attribute of input is the state variables name, email, phone etc.\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [current]);\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setContact({ ...contact, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!current) {\n      context.addContact(contact);\n    } else {\n      context.updateContact(contact);\n    }\n\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal',\n    });\n  };\n\n  const clearAll = () => {\n    context.clearCurrent();\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current === null ? 'Add Job' : 'Edit Job'}\n      </h2>\n      <input\n        type='text'\n        name='Organization'\n        value={name}\n        placeholder='Name'\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        name='Department'\n        value={email}\n        placeholder='Email'\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        name='phone'\n        value={phone}\n        placeholder='Phone'\n        onChange={onChange}\n      />\n      <h5>Contact type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='public'\n        checked={type === 'public'}\n        onChange={onChange}\n      />\n      Personal{' '}\n      <input\n        type='radio'\n        name='type'\n        value='prprivate'\n        checked={type === 'professional'}\n        onChange={onChange}\n      />\n      Professional{' '}\n      <input\n        type='radio'\n        name='type'\n        value='recreactional'\n        checked={type === 'recreactional'}\n        onChange={onChange}\n      />\n      Recreational{' '}\n      <div>\n        <input\n          type='submit'\n          value={current === null ? 'Add Job' : 'Edit Job'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default SecondForm;\n"]},"metadata":{},"sourceType":"module"}