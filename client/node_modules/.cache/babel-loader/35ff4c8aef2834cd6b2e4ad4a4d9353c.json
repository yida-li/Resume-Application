{"ast":null,"code":"import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CONTACTS } from '../Types';\n\nconst contactReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      };\n\n    case GET_CONTACTS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case DELETE_CONTACT:\n      {\n        return { ...state,\n          contacts: state.contacts.filter(contact => contact._id !== action.payload.id),\n          loading: false\n        };\n      }\n\n    case SET_CURRENT:\n      {\n        return { ...state,\n          current: action.payload\n        };\n      }\n\n    case CLEAR_CURRENT:\n      {\n        return { ...state,\n          current: null\n        };\n      }\n\n    case UPDATE_CONTACT:\n      {\n        return { ...state,\n          contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\n          loading: false\n        };\n      }\n\n    case FILTER_CONTACTS:\n      {\n        return { ...state,\n          filtered: state.contacts.filter(contact => {\n            const regex = new RegExp(`${action.payload}`, 'gi');\n            return contact.name.match(regex) || contact.email.match(regex);\n          })\n        };\n      }\n\n    case CLEAR_CONTACTS:\n      {\n        return { ...state,\n          contacts: null,\n          filtered: null,\n          error: null,\n          current: null\n        };\n      }\n\n    case CLEAR_FILTER:\n      {\n        return { ...state,\n          filtered: null\n        };\n      }\n\n    case CONTACT_ERROR:\n      {\n        return { ...state,\n          error: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;","map":{"version":3,"sources":["/home/king/Desktop/lindabirthday/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","contactReducer","state","action","type","contacts","payload","loading","filter","contact","_id","id","current","map","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,YARJ,EASIC,aATJ,EAUIC,cAVJ,QAWO,UAXP;;AAaA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B,CAFP;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKhB,YAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFd;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKd,cAAL;AAAqB;AACjB,eAAO,EACH,GAAGS,KADA;AAEHG,UAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAAP,CAAeK,EAAhE,CAFP;AAGHJ,UAAAA,OAAO,EAAE;AAHN,SAAP;AAKH;;AACD,SAAKb,WAAL;AAAkB;AACd,eAAO,EACH,GAAGQ,KADA;AAEHU,UAAAA,OAAO,EAAET,MAAM,CAACG;AAFb,SAAP;AAIH;;AACD,SAAKX,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGO,KADA;AAEHU,UAAAA,OAAO,EAAE;AAFN,SAAP;AAIH;;AACD,SAAKhB,cAAL;AAAqB;AACjB,eAAO,EACH,GAAGM,KADA;AAEHG,UAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeQ,GAAf,CAAmBJ,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,GAAqCP,MAAM,CAACG,OAA5C,GAAsDG,OAApF,CAFP;AAGHF,UAAAA,OAAO,EAAE;AAHN,SAAP;AAKH;;AACD,SAAKV,eAAL;AAAsB;AAClB,eAAO,EACH,GAAGK,KADA;AAEHY,UAAAA,QAAQ,EAAEZ,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsBC,OAAO,IAAI;AACvC,kBAAMM,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEb,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,mBAAOG,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACH,WAHS;AAFP,SAAP;AAOH;;AACD,SAAKf,cAAL;AAAqB;AACjB,eAAO,EACH,GAAGE,KADA;AAEHG,UAAAA,QAAQ,EAAE,IAFP;AAGHS,UAAAA,QAAQ,EAAE,IAHP;AAIHM,UAAAA,KAAK,EAAE,IAJJ;AAKHR,UAAAA,OAAO,EAAE;AALN,SAAP;AAOH;;AACD,SAAKd,YAAL;AAAmB;AACf,eAAO,EACH,GAAGI,KADA;AAEHY,UAAAA,QAAQ,EAAE;AAFP,SAAP;AAIH;;AACD,SAAKf,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGG,KADA;AAEHkB,UAAAA,KAAK,EAAEjB,MAAM,CAACG;AAFX,SAAP;AAIH;;AACD;AACI,aAAOJ,KAAP;AAtER;AAwEH,CAzED;;AA2EA,eAAeD,cAAf","sourcesContent":["import {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR,\n    CLEAR_CONTACTS\n} from '../Types'\n\nconst contactReducer = (state, action) => {\n    switch(action.type) {\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload],\n                loading: false\n            }\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case DELETE_CONTACT: {\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact._id !== action.payload.id),\n                loading: false\n            }\n        }\n        case SET_CURRENT: {\n            return {\n                ...state,\n                current: action.payload\n            }\n        }\n        case CLEAR_CURRENT: {\n            return {\n                ...state,\n                current: null\n            }\n        }\n        case UPDATE_CONTACT: {\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\n                loading: false\n            }\n        }\n        case FILTER_CONTACTS: {\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`, 'gi')\n                    return contact.name.match(regex) || contact.email.match(regex)\n                })\n            }\n        }\n        case CLEAR_CONTACTS: {\n            return {\n                ...state,\n                contacts: null,\n                filtered: null,\n                error: null,\n                current: null\n            }\n        }\n        case CLEAR_FILTER: {\n            return {\n                ...state,\n                filtered: null\n            }\n        }\n        case CONTACT_ERROR: {\n            return {\n                ...state,\n                error: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default contactReducer"]},"metadata":{},"sourceType":"module"}