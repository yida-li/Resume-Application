{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/ContactKeeperV2/client/src/components/contacts/ContactItem.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport contactContext from '../../context/contact/contactContext';\n\nconst ContactItem = ({\n  contact\n}) => {\n  const {\n    _id,\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n  const context = useContext(contactContext);\n\n  const onDelete = () => {\n    context.deleteContact(_id); // Delete the contact and also set current state value to null.\n\n    context.clearCurrent();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-primary text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, name, ' ', React.createElement(\"span\", {\n    style: {\n      float: \"right\"\n    },\n    className: 'badge ' + (type === 'personal' ? 'badge-primary' : 'badge-success'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, type.charAt(0).toUpperCase() + type.slice(1, type.length))), React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, email && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-envelope-open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \" \", email), phone && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \" \", phone)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-dark btn-sm\",\n    onClick: () => context.setCurrent(contact),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    className: \"btn btn-danger btn-sm\",\n    onClick: onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Delete\")));\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default ContactItem;","map":{"version":3,"sources":["/home/king/Desktop/ContactKeeperV2/client/src/components/contacts/ContactItem.js"],"names":["React","useContext","PropTypes","contactContext","ContactItem","contact","_id","name","email","phone","type","context","onDelete","deleteContact","clearCurrent","float","charAt","toUpperCase","slice","length","setCurrent","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAoCL,OAA1C;AACA,QAAMM,OAAO,GAAGV,UAAU,CAACE,cAAD,CAA1B;;AAEA,QAAMS,QAAQ,GAAG,MAAM;AACnBD,IAAAA,OAAO,CAACE,aAAR,CAAsBP,GAAtB,EADmB,CAEnB;;AACAK,IAAAA,OAAO,CAACG,YAAR;AACH,GAJD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAG,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,IADL,EACW,GADX,EAEI;AAAM,IAAA,KAAK,EAAI;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAAf;AAAmC,IAAA,SAAS,EAAG,YAAYL,IAAI,KAAK,UAAT,GAAsB,eAAtB,GAAwC,eAApD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BP,IAAI,CAACQ,KAAL,CAAW,CAAX,EAAaR,IAAI,CAACS,MAAlB,CADpC,CAFJ,CADJ,EAOI;AAAI,IAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMX,KAAK,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAG,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OACgDA,KADhD,CAFR,EAMMC,KAAK,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAG,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OACwCA,KADxC,CAPR,CAPJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAG,qBAApB;AAA0C,IAAA,OAAO,EAAI,MAAME,OAAO,CAACS,UAAR,CAAmBf,OAAnB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAQ,IAAA,SAAS,EAAG,uBAApB;AAA4C,IAAA,OAAO,EAAGO,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAnBJ,CADJ;AA0BH,CAnCD;;AAqCAR,WAAW,CAACiB,SAAZ,GAAwB;AACpBhB,EAAAA,OAAO,EAAEH,SAAS,CAACoB,MAAV,CAAiBC;AADN,CAAxB;AAGA,eAAenB,WAAf","sourcesContent":["import React, { useContext } from 'react'\nimport PropTypes from 'prop-types';\nimport contactContext from '../../context/contact/contactContext'\n\nconst ContactItem = ({ contact }) => {\n    const { _id, name, email, phone, type } = contact\n    const context = useContext(contactContext)\n\n    const onDelete = () => {\n        context.deleteContact(_id)\n        // Delete the contact and also set current state value to null.\n        context.clearCurrent()\n    }\n    return (\n        <div className = \"card bg-light\">\n            <h3 className = \"text-primary text-left\">\n                {name}{' '} \n                <span style = {{ float: \"right\" }} className= {'badge ' + (type === 'personal' ? 'badge-primary' : 'badge-success')}>\n                    {type.charAt(0).toUpperCase() + type.slice(1,type.length)}\n                </span>\n            </h3>\n            <ul className = \"list\">\n                { email && (\n                    <li>\n                        <i className = \"fas fa-envelope-open\"></i> {email}\n                    </li>\n                )}\n                { phone && (\n                    <li>\n                        <i className = \"fas fa-phone\"></i> {phone}\n                    </li>\n                )}\n            </ul>\n            <p>\n                <button className = \"btn btn-dark btn-sm\" onClick = {() => context.setCurrent(contact)}>Edit</button>\n                <button className = \"btn btn-danger btn-sm\" onClick= {onDelete}>Delete</button>\n            </p>\n        </div>\n    )\n}\n\nContactItem.propTypes = {\n    contact: PropTypes.object.isRequired\n}\nexport default ContactItem"]},"metadata":{},"sourceType":"module"}