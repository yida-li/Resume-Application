{"ast":null,"code":"import axios from 'axios'; // This utils function sets the token received after JWT process, into the global header, \n// so that we need not access the token from the backend for each and every request.\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;","map":{"version":3,"sources":["/home/king/Desktop/ContactKeeperV2/client/src/utils/setAuthToken.js"],"names":["axios","setAuthToken","token","defaults","headers","common"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,MAAIA,KAAJ,EAAW;AACPF,IAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDH,KAAhD;AACH,GAFD,MAEO;AACH,WAAOF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,CAAP;AACH;AACJ,CAND;;AAQA,eAAeJ,YAAf","sourcesContent":["import axios from 'axios'\n\n// This utils function sets the token received after JWT process, into the global header, \n// so that we need not access the token from the backend for each and every request.\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token\n    } else {\n        delete axios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default setAuthToken"]},"metadata":{},"sourceType":"module"}